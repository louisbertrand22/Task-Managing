name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  backend-build:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore dependencies
        run: dotnet restore TaskManager.API/TaskManager.API.csproj
      - name: Build backend
        run: dotnet build TaskManager.API/TaskManager.API.csproj --no-restore
      - name: Test backend
        run: dotnet test TaskManager.API.Tests.csproj --logger "trx;LogFileName=testresults.trx" --results-directory "./TestResults"
        working-directory: TaskManager.API.Tests
      - name: Upload backend test results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: TaskManager.API.Tests/TestResults
        if: always()
      - name: Report backend test results
        uses: bibipkins/dotnet-test-reporter@v1.4.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          results-path: TaskManager.API.Tests/TestResults/testresults.trx
          comment-title: 'Backend Test Results'
      - name: Publish backend
        run: dotnet publish TaskManager.API/TaskManager.API.csproj -c Release -o ./publish

  frontend-build:
    runs-on: ubuntu-latest
    env:
      CHROME_BIN: /usr/bin/google-chrome
      CHROME_FLAGS: --no-sandbox --disable-gpu
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Install frontend dependencies
        run: npm install
        working-directory: TaskManager.Web
      - name: Build frontend
        run: npm run build -- --output-path=./dist/task-manager-web --configuration production
        working-directory: TaskManager.Web
      - name: Test frontend
        run: npm test -- --no-watch --no-progress
        working-directory: TaskManager.Web 